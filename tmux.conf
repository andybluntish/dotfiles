# Don't wait for an excape sequence
set -sg escape-time 0

# 256 colors for vim
set -g default-terminal "screen-256color"

# Remap prefix to Control + Space
set -g prefix C-Space
unbind C-b
bind C-Space send-prefix

# Quick pane cycling (Control + Space twice)
unbind ^Space
bind ^Space select-pane -t :.+

# Enter copy mode
bind Space copy-mode
bind C-Space copy-mode

# Reload the config file
bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"

# Clear the pane and it's history
bind C-l send-keys 'C-l'

# Turn on vim mode for movement
setw -g mode-keys vi

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use the system clipboard
set-option -g default-command "reattach-to-user-namespace -l bash"

# Setup 'v' to begin selection, 'y' to copy, 'esc' to cancel, as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -t vi-copy Escape cancel

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# start with window 1 (instead of 0)
set -g base-index 1

# start with pane 1
set -g pane-base-index 1

# turn on window renumbering
set-option -g renumber-windows on

# status line
set -g status-utf8 on
set -g status-justify left
set -g status-interval 4

# Mouse works as expected
set -g mouse on

# Scrolling works as expected
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
